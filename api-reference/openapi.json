{
  "openapi": "3.0.0",
  "info": {
    "title": "EmailVault.de API",
    "description": "API documentation for EmailVault.de",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.emailvault.de/v1"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "your_jwt_token_here"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "User registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "user_id_here"
                    },
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh authentication token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "your_refresh_token_here"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "new_jwt_token_here"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get user details",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "user_id_here"
                    },
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "user"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user details",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "newpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "summary": "Delete user account",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User account deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "summary": "Create a new task",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskType": {
                    "type": "string",
                    "example": "backup"
                  },
                  "parameters": {
                    "type": "object",
                    "example": {
                      "email": "user@example.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskId": {
                      "type": "string",
                      "example": "task_id_here"
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "List all tasks",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "taskId": {
                        "type": "string",
                        "example": "task_id_here"
                      },
                      "status": {
                        "type": "string",
                        "example": "completed"
                      },
                      "taskType": {
                        "type": "string",
                        "example": "backup"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/status/{id}": {
      "get": {
        "summary": "Get status of a specific task",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "task_id_here"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskId": {
                      "type": "string",
                      "example": "task_id_here"
                    },
                    "status": {
                      "type": "string",
                      "example": "completed"
                    },
                    "taskType": {
                      "type": "string",
                      "example": "backup"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/workers/status": {
      "get": {
        "summary": "Get status of all workers",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Workers status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "workerId": {
                        "type": "string",
                        "example": "worker_id_here"
                      },
                      "status": {
                        "type": "string",
                        "example": "active"
                      },
                      "tasks_in_progress": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workers/config": {
      "put": {
        "summary": "Update worker configurations",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maxTasks": {
                    "type": "integer",
                    "example": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Worker configuration updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/encryption/keys": {
      "post": {
        "summary": "Generate encryption keys",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Encryption keys generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keyId": {
                      "type": "string",
                      "example": "key_id_here"
                    },
                    "encryptionKey": {
                      "type": "string",
                      "example": "base64_encoded_key"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/encryption/keys/{id}": {
      "get": {
        "summary": "Retrieve encryption key",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "key_id_here"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Encryption key retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keyId": {
                      "type": "string",
                      "example": "key_id_here"
                    },
                    "encryptionKey": {
                      "type": "string",
                      "example": "base64_encoded_key"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
